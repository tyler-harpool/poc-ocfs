name: ADR API CI Pipeline

on:
  pull_request:
    paths:
      - .github/workflows/adr_api.yml
      - adr_api/**
  push:
    paths:
      - .github/workflows/adr_api.yml
      - adr_api/**
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: app_user
          POSTGRES_PASSWORD: dev_only_pwd
          POSTGRES_DB: app_db
        options: >-
          --health-cmd "pg_isready -U app_user -d app_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://app_user:dev_only_pwd@localhost:5432/app_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry
          restore-keys: |
            ${{ runner.os }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index
          restore-keys: |
            ${{ runner.os }}-cargo-index

      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build
          restore-keys: |
            ${{ runner.os }}-cargo-build

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --features postgres

      - name: Run database migrations
        run: sqlx migrate run --source database_utils/migrations

      - name: Build
        run: cargo build --release --manifest-path adr_api/Cargo.toml

      - name: Run tests
        run: cargo test --manifest-path adr_api/Cargo.toml -- --test-threads=1

  docker-build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./adr_api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}