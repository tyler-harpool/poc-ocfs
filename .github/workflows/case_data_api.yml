name: Case Data API CI Pipeline

on:
  pull_request:
    paths:
      - .github/workflows/case_data_api.yml
      - case_data_api/**
  push:
    paths:
      - .github/workflows/case_data_api.yml
      - case_data_api/**
    branches:
      - main
env:
  REGISTRY: ghcr.io
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: app_user
          POSTGRES_PASSWORD: dev_only_pwd
          POSTGRES_DB: app_db
        options: >-
          --health-cmd "pg_isready -U app_user -d app_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://app_user:dev_only_pwd@localhost:5432/app_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry
          restore-keys: |
            ${{ runner.os }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index
          restore-keys: |
            ${{ runner.os }}-cargo-index

      - name: Cache cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build
          restore-keys: |
            ${{ runner.os }}-cargo-build

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --features postgres

      - name: Run database migrations
        run: sqlx migrate run --source database_utils/migrations

      - name: Build
        run: cargo build --release --manifest-path case_data_api/Cargo.toml

      - name: Run tests
        run: cargo test --manifest-path case_data_api/Cargo.toml -- --test-threads=1
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ inputs.rust-version }}
          override: true
          components: rustfmt, clippy
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings
      - name: Install cargo check tools
        run: |
          cargo install --locked cargo-deny || true
          cargo install --locked cargo-outdated || true
          cargo install --locked cargo-udeps || true
          cargo install --locked cargo-audit || true
          cargo install --locked cargo-pants || true
      - name: Check
        run: |
          cargo deny check
          cargo outdated --exit-code 1
          cargo udeps
          rm -rf ~/.cargo/advisory-db
          cargo audit
          cargo pants
      - name: Test
        run: cargo test
  build:
    uses: ectobit/reusable-workflows/.github/workflows/buildx.yaml@main
    needs: check
    with:
      image: ghcr.io/tyler-harpool/poc-ocfs/case_data_api
    secrets:
      container-registry-username: ${{ secrets.REGISTRY_USERNAME }}
      container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}

