   Compiling ocfs v0.1.0 (/Users/THarpool/RustroverProjects/ocfs)
error[E0432]: unresolved import `simplelog`
  --> src/main.rs:15:5
   |
15 | use simplelog::{CombinedLogger, WriteLogger, TermLogger, Config, TerminalMode, ColorChoice};
   |     ^^^^^^^^^ use of undeclared crate or module `simplelog`

warning: unused import: `uuid::Uuid`
 --> src/models.rs:3:5
  |
3 | use uuid::Uuid;
  |     ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `sqlx::PgPool`
  --> src/main.rs:11:5
   |
11 | use sqlx::PgPool;
   |     ^^^^^^^^^^^^

error[E0277]: the trait bound `Uuid: Encode<'_, Postgres>` is not satisfied
  --> src/handlers.rs:83:15
   |
83 |         .bind(id)
   |          ---- ^^ the trait `Encode<'_, Postgres>` is not implemented for `Uuid`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `Encode<'q, DB>`:
             <bool as Encode<'q, sqlx::Any>>
             <bool as Encode<'_, Postgres>>
             <i8 as Encode<'_, Postgres>>
             <i16 as Encode<'q, sqlx::Any>>
             <i16 as Encode<'_, Postgres>>
             <i32 as Encode<'q, sqlx::Any>>
             <i32 as Encode<'_, Postgres>>
             <i64 as Encode<'q, sqlx::Any>>
           and 34 others
note: required by a bound in `sqlx::query::Query::<'q, DB, <DB as HasArguments<'q>>::Arguments>::bind`
  --> /Users/THarpool/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sqlx-core-0.7.4/src/query.rs:81:32
   |
81 |     pub fn bind<T: 'q + Send + Encode<'q, DB> + Type<DB>>(mut self, value: T) -> Self {
   |                                ^^^^^^^^^^^^^^ required by this bound in `Query::<'q, DB, <DB as HasArguments<'q>>::Arguments>::bind`

error[E0277]: the trait bound `Uuid: Type<Postgres>` is not satisfied
  --> src/handlers.rs:83:15
   |
83 |         .bind(id)
   |          ---- ^^ the trait `Type<Postgres>` is not implemented for `Uuid`
   |          |
   |          required by a bound introduced by this call
   |
   = help: the following other types implement trait `Type<DB>`:
             <bool as Type<Postgres>>
             <bool as Type<sqlx::Any>>
             <i8 as Type<Postgres>>
             <i16 as Type<Postgres>>
             <i16 as Type<sqlx::Any>>
             <i32 as Type<Postgres>>
             <i32 as Type<sqlx::Any>>
             <i64 as Type<Postgres>>
           and 41 others
note: required by a bound in `sqlx::query::Query::<'q, DB, <DB as HasArguments<'q>>::Arguments>::bind`
  --> /Users/THarpool/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sqlx-core-0.7.4/src/query.rs:81:49
   |
81 |     pub fn bind<T: 'q + Send + Encode<'q, DB> + Type<DB>>(mut self, value: T) -> Self {
   |                                                 ^^^^^^^^ required by this bound in `Query::<'q, DB, <DB as HasArguments<'q>>::Arguments>::bind`

error[E0277]: the trait bound `fn(axum::Json<CaseData>, Extension<Pool<Postgres>>) -> impl std::future::Future<Output = impl IntoResponse> {handlers::create_case_data}: Handler<_, _>` is not satisfied
   --> src/main.rs:41:35
    |
41  |         .route("/case_data", post(create_case_data))
    |                              ---- ^^^^^^^^^^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(axum::Json<CaseData>, Extension<Pool<Postgres>>) -> impl std::future::Future<Output = impl IntoResponse> {handlers::create_case_data}`
    |                              |
    |                              required by a bound introduced by this call
    |
    = help: the following other types implement trait `Handler<T, S>`:
              <Layered<L, H, T, S> as Handler<T, S>>
              <MethodRouter<S> as Handler<(), S>>
note: required by a bound in `post`
   --> /Users/THarpool/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/routing/method_routing.rs:389:1
    |
389 | top_level_handler_fn!(post, POST);
    | ^^^^^^^^^^^^^^^^^^^^^^----^^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `post`
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `fn(axum::extract::Path<Uuid>, axum::Json<CaseData>, Extension<Pool<Postgres>>) -> impl std::future::Future<Output = impl IntoResponse> {handlers::update_case_data}: Handler<_, _>` is not satisfied
   --> src/main.rs:43:40
    |
43  |         .route("/case_data/:id", patch(update_case_data))
    |                                  ----- ^^^^^^^^^^^^^^^^ the trait `Handler<_, _>` is not implemented for fn item `fn(Path<Uuid>, Json<CaseData>, Extension<Pool<Postgres>>) -> impl Future<Output = ...> {update_case_data}`
    |                                  |
    |                                  required by a bound introduced by this call
    |
    = help: the following other types implement trait `Handler<T, S>`:
              <Layered<L, H, T, S> as Handler<T, S>>
              <MethodRouter<S> as Handler<(), S>>
note: required by a bound in `patch`
   --> /Users/THarpool/.cargo/registry/src/index.crates.io-6f17d22bba15001f/axum-0.7.5/src/routing/method_routing.rs:388:1
    |
388 | top_level_handler_fn!(patch, PATCH);
    | ^^^^^^^^^^^^^^^^^^^^^^-----^^^^^^^^
    | |                     |
    | |                     required by a bound in this function
    | required by this bound in `patch`
    = note: this error originates in the macro `top_level_handler_fn` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0433]: failed to resolve: use of undeclared type `Server`
  --> src/main.rs:49:21
   |
49 |     if let Err(e) = Server::bind(&addr)
   |                     ^^^^^^ use of undeclared type `Server`

Some errors have detailed explanations: E0277, E0432, E0433.
For more information about an error, try `rustc --explain E0277`.
warning: `ocfs` (bin "ocfs") generated 2 warnings
error: could not compile `ocfs` (bin "ocfs") due to 6 previous errors; 2 warnings emitted
