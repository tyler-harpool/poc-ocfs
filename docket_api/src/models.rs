use serde::{Deserialize, Serialize};
use sqlx::FromRow;


#[derive(Serialize, Deserialize, FromRow)]
pub struct Docket {
    pub id: Option<i32>,
    pub date_created: String,
    pub date_modified: String,
    pub source: i32,
    pub appeal_from_str: Option<String>,
    pub assigned_to_str: Option<String>,
    pub referred_to_str: Option<String>,
    pub panel_str: Option<String>,
    pub date_last_index: Option<String>,
    pub date_cert_granted: Option<String>,
    pub date_cert_denied: Option<String>,
    pub date_argued: Option<String>,
    pub date_reargued: Option<String>,
    pub date_reargument_denied: Option<String>,
    pub date_filed: Option<String>,
    pub date_terminated: Option<String>,
    pub date_last_filing: Option<String>,
    pub case_name_short: Option<String>,
    pub case_name: Option<String>,
    pub case_name_full: Option<String>,
    pub slug: Option<String>,
    pub docket_number: Option<String>,
    pub docket_number_core: Option<String>,
    pub pacer_case_id: Option<String>,
    pub cause: Option<String>,
    pub nature_of_suit: Option<String>,
    pub jury_demand: Option<String>,
    pub jurisdiction_type: Option<String>,
    pub appellate_fee_status: Option<String>,
    pub appellate_case_type_information: Option<String>,
    pub mdl_status: Option<String>,
    pub filepath_local: Option<String>,
    pub filepath_ia: Option<String>,
    pub filepath_ia_json: Option<String>,
    pub ia_upload_failure_count: Option<String>,
    pub ia_needs_upload: Option<String>,
    pub ia_date_first_change: Option<String>,
    pub view_count: Option<String>,
    pub date_blocked: Option<String>,
    pub blocked: Option<String>,
    pub appeal_from_id: Option<String>,
    pub assigned_to_id: Option<String>,
    pub court_id: Option<String>,
    pub idb_data_id: Option<String>,
    pub originating_court_information_id: Option<String>,
    pub referred_to_id: Option<String>,
}


#[derive(Serialize, Deserialize, Debug, Clone)]
pub struct UpdateDocket {
    pub id: Option<i32>,
    pub date_created: String,
    pub date_modified: String,
    pub source: i32,
    pub appeal_from_str: Option<String>,
    pub assigned_to_str: Option<String>,
    pub referred_to_str: Option<String>,
    pub panel_str: Option<String>,
    pub date_last_index: Option<String>,
    pub date_cert_granted: Option<String>,
    pub date_cert_denied: Option<String>,
    pub date_argued: Option<String>,
    pub date_reargued: Option<String>,
    pub date_reargument_denied: Option<String>,
    pub date_filed: Option<String>,
    pub date_terminated: Option<String>,
    pub date_last_filing: Option<String>,
    pub case_name_short: Option<String>,
    pub case_name: Option<String>,
    pub case_name_full: Option<String>,
    pub slug: Option<String>,
    pub docket_number: Option<String>,
    pub docket_number_core: Option<String>,
    pub pacer_case_id: Option<String>,
    pub cause: Option<String>,
    pub nature_of_suit: Option<String>,
    pub jury_demand: Option<String>,
    pub jurisdiction_type: Option<String>,
    pub appellate_fee_status: Option<String>,
    pub appellate_case_type_information: Option<String>,
    pub mdl_status: Option<String>,
    pub filepath_local: Option<String>,
    pub filepath_ia: Option<String>,
    pub filepath_ia_json: Option<String>,
    pub ia_upload_failure_count: Option<String>,
    pub ia_needs_upload: Option<String>,
    pub ia_date_first_change: Option<String>,
    pub view_count: Option<String>,
    pub date_blocked: Option<String>,
    pub blocked: Option<String>,
    pub appeal_from_id: Option<String>,
    pub assigned_to_id: Option<String>,
    pub court_id: Option<String>,
    pub idb_data_id: Option<String>,
    pub originating_court_information_id: Option<String>,
    pub referred_to_id: Option<String>,

}

